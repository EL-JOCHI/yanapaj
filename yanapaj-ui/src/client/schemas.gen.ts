// This file is auto-generated by @hey-api/openapi-ts

export const TaskRequestSchema = {
    required: ['dueDate', 'title'],
    type: 'object',
    properties: {
        title: {
            type: 'string'
        },
        description: {
            type: 'string'
        },
        dueDate: {
            type: 'string',
            format: 'date-time'
        },
        status: {
            type: 'string',
            enum: ['TODO', 'IN_PROGRESS', 'BLOCKED', 'DONE']
        }
    }
} as const;

export const TaskSchema = {
    required: ['dueDate', 'title'],
    type: 'object',
    properties: {
        id: {
            type: 'string'
        },
        title: {
            type: 'string'
        },
        description: {
            type: 'string'
        },
        dueDate: {
            type: 'string',
            format: 'date-time'
        },
        status: {
            type: 'string',
            enum: ['TODO', 'IN_PROGRESS', 'BLOCKED', 'DONE']
        }
    }
} as const;

export const SignupRequestSchema = {
    required: ['email', 'password'],
    type: 'object',
    properties: {
        email: {
            type: 'string'
        },
        password: {
            pattern: "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#&()â€“{}:;',?/*~$^+=<>]).{8,20}$",
            type: 'string'
        }
    }
} as const;

export const LoginRequestSchema = {
    type: 'object',
    properties: {
        email: {
            type: 'string'
        },
        password: {
            type: 'string'
        }
    }
} as const;

export const PageTaskSchema = {
    type: 'object',
    properties: {
        totalElements: {
            type: 'integer',
            format: 'int64'
        },
        totalPages: {
            type: 'integer',
            format: 'int32'
        },
        size: {
            type: 'integer',
            format: 'int32'
        },
        content: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/Task'
            }
        },
        number: {
            type: 'integer',
            format: 'int32'
        },
        sort: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/SortObject'
            }
        },
        numberOfElements: {
            type: 'integer',
            format: 'int32'
        },
        pageable: {
            '$ref': '#/components/schemas/PageableObject'
        },
        first: {
            type: 'boolean'
        },
        last: {
            type: 'boolean'
        },
        empty: {
            type: 'boolean'
        }
    }
} as const;

export const PageableObjectSchema = {
    type: 'object',
    properties: {
        offset: {
            type: 'integer',
            format: 'int64'
        },
        sort: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/SortObject'
            }
        },
        paged: {
            type: 'boolean'
        },
        pageNumber: {
            type: 'integer',
            format: 'int32'
        },
        pageSize: {
            type: 'integer',
            format: 'int32'
        },
        unpaged: {
            type: 'boolean'
        }
    }
} as const;

export const SortObjectSchema = {
    type: 'object',
    properties: {
        direction: {
            type: 'string'
        },
        nullHandling: {
            type: 'string'
        },
        ascending: {
            type: 'boolean'
        },
        property: {
            type: 'string'
        },
        ignoreCase: {
            type: 'boolean'
        }
    }
} as const;